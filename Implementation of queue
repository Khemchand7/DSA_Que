#include <iostream>
using namespace std;

class queue
{
public:
    int *arr;
    int size;
    int front;
    int rear;
    queue(int size)
    {
        arr = new int[size];
        this->size = size;
        front = -1;
        rear = -1;
    }

    void push(int data)
    {
        if(rear ==size-1){
            cout<<"overflow"<<endl;
            return;
        }
        else if(front == -1 && rear == -1){
            front++;
            rear++;
            arr[rear] = data;
        }
        else{
            rear++;
            arr[rear] = data;
        }
    }

    void pop(){
        if(front == -1 && rear == -1){
            cout<<"underflow"<<endl;
            return;
        }
        else if(front == rear){
            arr[front] = -1;
            front = -1;
            rear = -1;
        }
        else{
            arr[front] = -1;
            front++;
        }
    }

    int getSize(){
        if(front == -1 && rear == -1){
            return 0;
        }
        else{
            return rear - front +1;
        }
    }

    bool isEmpty(){
        if(front == -1 && rear == -1){
            return true;
        }
        else{
            return false;
        }
    }

    int getFront(){
        if(front == -1 && rear == -1){
            cout<<"queue is empty"<<endl;
            return -1;
        }
        else{
            return arr[front];
        }
    }

    int getRear(){
        if(front == -1 && rear == -1){
            cout<<"queue is empty"<<endl;
            return -1;
        }
        else{
            return arr[rear];
        }
    }

    void print(){
        if(front == -1 && rear == -1){
            cout<<"queue is empty"<<endl;
            return;
        }
        for(int i =0;i<=size-1;i++){
            cout<<arr[i]<<" ";
        }
    }

};
int main()
{
    queue q(5);
    cout<<q.getSize()<<endl;
    q.push(10);
    q.push(20);
    q.push(30);
    q.push(40);
    q.push(50);
    cout<<q.getSize()<<endl;
    q.print();
    cout<<endl;
    q.pop();
    q.pop();
    q.pop();
    q.pop();
    q.push(70);
    q.print();
    cout<<endl;
    return 0;
}
